apiVersion: v1
kind: Service
metadata:
  name: mongo-db
  labels:
    app: mongo-db
spec:
  ports:
  - name: mongo
    port: 27017
  clusterIP: None
  selector:
    app: mongo-db
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-db
spec:
  selector:
    matchLabels:
      app: mongo-db
  serviceName: "mongo-db"
  replicas: 3
  template:
    metadata:
      labels:
        app: mongo-db
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongo
        image: mongo:4.2.7
        command:
        - mongod
        - "--bind_ip_all"
        - "--replSet"
        - repl-set0
        ports:
        - containerPort: 27017
          name: mongo
        # volumeMounts:
        # - name: mongo-volume
        #   mountPath: /data/db
        postInstall:
          
#   volumeClaimTemplates:
#   - metadata:
#       name: mongo-volume
#     spec:
#       accessModes: [ "ReadWriteOnce" ]
#       resources:
#         requests:
#           storage: 1Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: setup-mongo-db
spec:
  template:
    spec:
      containers:
      - name: mongo
        image: mongo
        command: ["mongo",  "--host", "mongo-db", "--eval", 'res=rs.initiate({_id:"repl-set0",version:1,members:[{_id:0,host:"mongo-db-0.mongo-db:27017"},{_id:1,host:"mongo-db-1.mongo-db:27017"},{_id:2,host:"mongo-db-2.mongo-db:27017"}]});if(res.ok!=1){throw res.errmsg}']
      restartPolicy: OnFailure